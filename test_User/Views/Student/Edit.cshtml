@model Student
@{

    ViewData["Title"] = "Update";

    List<String> streams = new List<String>();
    streams.Add("Maths");
    streams.Add("Science");
    streams.Add("Commerce");
}

<h1>Update Student</h1>
@if (TempData["UserUpdateFailed"] != null)
{
    <p class="alert alert-danger">@TempData["UserUpdateFailed"]</p>
}

<div class="container">
    @using (Html.BeginForm("Edit", "Student", FormMethod.Post, new { @class = "newsletterform" }))
    {



        <div class="form-group">
            <label for="exampleInputEmail1"> @Html.LabelFor(m => m.Name)</label>
            @Html.EditorFor(m => m.Name, new { htmlAttributes = new { @class = "form-control" } })
            <small id="emailHelp" class="form-text text-muted"> @Html.ValidationMessageFor(m => m.Name)</small>
        </div>

        <div class="form-group">
            <label for="exampleInputEmail1"> @Html.LabelFor(m => m.Birthday)</label>
            @Html.EditorFor(m => m.Birthday, new { @type = "date", htmlAttributes = new { @class = "form-control" } })
            <small id="emailHelp" class="form-text text-muted"> @Html.ValidationMessageFor(m => m.Birthday)</small>
        </div>

        <div class="form-group">
            <label for="exampleInputEmail1"> @Html.LabelFor(m => m.RegisterDate)</label>
            @Html.EditorFor(m => m.RegisterDate, new { @type = "date", htmlAttributes = new { @class = "form-control" } })
            <small id="emailHelp" class="form-text text-muted"> @Html.ValidationMessageFor(m => m.RegisterDate)</small>
        </div>

        <div class="form-group">
            <label for="exampleInputEmail1"> @Html.LabelFor(m => m.ALStream)</label>
            <select class="form-control" asp-for="ALStream">
                @foreach (string st in streams)
                {
                    <option value=@st>@st</option>
                }

            </select>
        </div>


        <button type="submit" class="btn btn-primary">Update</button>
    }

</div>